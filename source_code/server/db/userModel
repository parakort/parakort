const mongoose = require("mongoose");
const uniqueValidator = require('mongoose-unique-validator');
const { Schema } = mongoose;

const UserSchema = new mongoose.Schema({
    
email: {
    type: String,
    required: [true, "Please provide an email."],
    unique: [true, "Username taken!"],
    maxlength: [100, "Email too long"],
    uniqueCaseInsensitive: true
},

password: {
    type: String,
    required: [true, "Please provide a password!"],
    unique: false,
},

// Dynamic fields
location: {
    lat: { type: Number },
    lon: { type: Number }
},

// Additional fields
filters: {
    type: Map,
    of: Schema.Types.Mixed
},


renewal_date: {
    type: Number,
    default: 0
},

pending_device: {
    type: String
},

code: {
    type: Number
},

code_attempts: {
    type: Number,
    default: 0
},

dormant: {
    // Number of days that account has not been accessed
    type: Number,
    default: 0,
},

marked_for_deletion: {
    type: Boolean,
    default: false
},

email_confirmed: {
    type: Boolean,
    default: false
},


tokens: {
    // Defaults to 0. Trial tokens granted once we confirm that registering device id is not in the device pool
    type: Number,
    default: 0
},


devices: {
    type: Array
}

})

UserSchema.plugin(uniqueValidator, {
    message: 'Error, expected {PATH} to be unique.'
  });
  
module.exports = mongoose.model.Users || mongoose.model("User", UserSchema);